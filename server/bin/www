const app = require('../app');
const appName = require('../package.json').name;
const path = require('path');
const debug = require('debug')(`${appName}:${path.basename(__filename).split('.')[0]}`);
const http = require('http');

// catch 404 and forward to error handler
app.use((req, res, next) => {
  const err = new Error('Not Found');
  err.status = 404;
  next(err);
});

app.use((err, req, res) => {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = process.env.ENV === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
}); // Express middleware to handle errors

const server = http.createServer(app);

server.on('error', (error) => {
  if (error.syscall !== 'listen') { throw error; }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      debug(`Port ${process.env.PORT} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      debug(`Port ${process.env.PORT}is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.listen(process.env.PORT, () => {
  debug(`Listening on http://localhost:${process.env.PORT}`);
});

module.exports = debug;
